// !!!                      IMPORTANT NOTE                          !!!
// !!! This header file is dynamically generated by gen_va_macro.sh !!!
// !!! Please do NOT keep your modifications here.                  !!!
#define VA_GET_1(_1, ...) _1
#define VA_GET_2(_1, _2, ...) _2
#define VA_GET_3(_1, _2, _3, ...) _3
#define VA_GET_4(_1, _2, _3, _4, ...) _4
#define VA_GET_5(_1, _2, _3, _4, _5, ...) _5
#define VA_GET_6(_1, _2, _3, _4, _5, _6, ...) _6
#define VA_GET_7(_1, _2, _3, _4, _5, _6, _7, ...) _7
#define VA_GET_8(_1, _2, _3, _4, _5, _6, _7, _8, ...) _8
#define VA_GET_9(_1, _2, _3, _4, _5, _6, _7, _8, _9, ...) _9

// This section is used for debugging only, when printing type of args
// is required.
#define VA_GET_S1(_1, ...) #_1
#define VA_GET_S2(_1, _2, ...) #_2
#define VA_GET_S3(_1, _2, _3, ...) #_3
#define VA_GET_S4(_1, _2, _3, _4, ...) #_4
#define VA_GET_S5(_1, _2, _3, _4, _5, ...) #_5
#define VA_GET_S6(_1, _2, _3, _4, _5, _6, ...) #_6
#define VA_GET_S7(_1, _2, _3, _4, _5, _6, _7, ...) #_7
#define VA_GET_S8(_1, _2, _3, _4, _5, _6, _7, _8, ...) #_8
#define VA_GET_S9(_1, _2, _3, _4, _5, _6, _7, _8, _9, ...) #_9

// This section is used for getting logging function
#define VA_GET_LOG1(_1, ...) log_##_1
#define VA_GET_LOG2(_1, _2, ...) log_##_2
#define VA_GET_LOG3(_1, _2, _3, ...) log_##_3
#define VA_GET_LOG4(_1, _2, _3, _4, ...) log_##_4
#define VA_GET_LOG5(_1, _2, _3, _4, _5, ...) log_##_5
#define VA_GET_LOG6(_1, _2, _3, _4, _5, _6, ...) log_##_6
#define VA_GET_LOG7(_1, _2, _3, _4, _5, _6, _7, ...) log_##_7
#define VA_GET_LOG8(_1, _2, _3, _4, _5, _6, _7, _8, ...) log_##_8
#define VA_GET_LOG9(_1, _2, _3, _4, _5, _6, _7, _8, _9, ...) log_##_9

#define VA_MAP_UNROLL_1(arg, ...)                         \
    arg[0].selfprint = VA_GET_LOG1(__VA_ARGS__);          \
    arg[0].addr = &op1;                                   \
    arg[0].type = VA_GET_S1(__VA_ARGS__);

#define VA_MAP_UNROLL_2(arg, ...)                        \
    VA_MAP_UNROLL_1(arg,  __VA_ARGS__)                   \
    arg[1].selfprint = VA_GET_LOG2(__VA_ARGS__);        \
    arg[1].addr = &op2;                                 \
    arg[1].type = VA_GET_S2(__VA_ARGS__);

#define VA_MAP_UNROLL_3(arg, ...)                        \
    VA_MAP_UNROLL_2(arg,  __VA_ARGS__)                   \
    arg[2].selfprint = VA_GET_LOG3(__VA_ARGS__);        \
    arg[2].addr = &op3;                                 \
    arg[2].type = VA_GET_S3(__VA_ARGS__);

#define VA_MAP_UNROLL_4(arg, ...)                        \
    VA_MAP_UNROLL_3(arg,  __VA_ARGS__)                   \
    arg[3].selfprint = VA_GET_LOG4(__VA_ARGS__);        \
    arg[3].addr = &op4;                                 \
    arg[3].type = VA_GET_S4(__VA_ARGS__);

#define VA_MAP_UNROLL_5(arg, ...)                        \
    VA_MAP_UNROLL_4(arg,  __VA_ARGS__)                   \
    arg[4].selfprint = VA_GET_LOG5(__VA_ARGS__);        \
    arg[4].addr = &op5;                                 \
    arg[4].type = VA_GET_S5(__VA_ARGS__);

#define VA_MAP_UNROLL_6(arg, ...)                        \
    VA_MAP_UNROLL_5(arg,  __VA_ARGS__)                   \
    arg[5].selfprint = VA_GET_LOG6(__VA_ARGS__);        \
    arg[5].addr = &op6;                                 \
    arg[5].type = VA_GET_S6(__VA_ARGS__);

#define VA_MAP_UNROLL_7(arg, ...)                        \
    VA_MAP_UNROLL_6(arg,  __VA_ARGS__)                   \
    arg[6].selfprint = VA_GET_LOG7(__VA_ARGS__);        \
    arg[6].addr = &op7;                                 \
    arg[6].type = VA_GET_S7(__VA_ARGS__);

#define VA_MAP_UNROLL_8(arg, ...)                        \
    VA_MAP_UNROLL_7(arg,  __VA_ARGS__)                   \
    arg[7].selfprint = VA_GET_LOG8(__VA_ARGS__);        \
    arg[7].addr = &op8;                                 \
    arg[7].type = VA_GET_S8(__VA_ARGS__);

#define VA_MAP_UNROLL_9(arg, ...)                        \
    VA_MAP_UNROLL_8(arg,  __VA_ARGS__)                   \
    arg[8].selfprint = VA_GET_LOG9(__VA_ARGS__);        \
    arg[8].addr = &op9;                                 \
    arg[8].type = VA_GET_S9(__VA_ARGS__);

#define VA_CONCAT_DECL_1(...) VA_GET_1(__VA_ARGS__) op1
#define VA_CONCAT_DECL_2(...) VA_CONCAT_DECL_1(__VA_ARGS__), VA_GET_2(__VA_ARGS__) op2
#define VA_CONCAT_DECL_3(...) VA_CONCAT_DECL_2(__VA_ARGS__), VA_GET_3(__VA_ARGS__) op3
#define VA_CONCAT_DECL_4(...) VA_CONCAT_DECL_3(__VA_ARGS__), VA_GET_4(__VA_ARGS__) op4
#define VA_CONCAT_DECL_5(...) VA_CONCAT_DECL_4(__VA_ARGS__), VA_GET_5(__VA_ARGS__) op5
#define VA_CONCAT_DECL_6(...) VA_CONCAT_DECL_5(__VA_ARGS__), VA_GET_6(__VA_ARGS__) op6
#define VA_CONCAT_DECL_7(...) VA_CONCAT_DECL_6(__VA_ARGS__), VA_GET_7(__VA_ARGS__) op7
#define VA_CONCAT_DECL_8(...) VA_CONCAT_DECL_7(__VA_ARGS__), VA_GET_8(__VA_ARGS__) op8
#define VA_CONCAT_DECL_9(...) VA_CONCAT_DECL_8(__VA_ARGS__), VA_GET_9(__VA_ARGS__) op9

#define VA_CONCAT_1() op1
#define VA_CONCAT_2() VA_CONCAT_1(), op2
#define VA_CONCAT_3() VA_CONCAT_2(), op3
#define VA_CONCAT_4() VA_CONCAT_3(), op4
#define VA_CONCAT_5() VA_CONCAT_4(), op5
#define VA_CONCAT_6() VA_CONCAT_5(), op6
#define VA_CONCAT_7() VA_CONCAT_6(), op7
#define VA_CONCAT_8() VA_CONCAT_7(), op8
#define VA_CONCAT_9() VA_CONCAT_8(), op9
